MongoDB Install, Configure and Monitor
======================================

Index:
Part1 - Installation
Part2 - Configuration
Part3 - Connect from client machine using mongosh
Part4 - Setup Monitoring using Prometheus
Appendix - What metrics are coming?

(best to view in Consolas Regular 12 font in notepad)

=================================================================================================================================================

Part1 - Installation

dnf install -y https://repo.mongodb.org/yum/redhat/8/mongodb-org/4.4/x86_64/RPMS/mongodb-org-server-4.4.6-1.el8.x86_64.rpm
dnf install -y https://repo.mongodb.org/yum/redhat/8/mongodb-org/4.4/x86_64/RPMS/mongodb-org-shell-4.4.6-1.el8.x86_64.rpm
dnf install -y https://repo.mongodb.org/yum/redhat/8/mongodb-org/4.4/x86_64/RPMS/mongodb-database-tools-100.9.5-1.x86_64.rpm
systemctl enable --now mongod


firewall-cmd --permanent --add-port=27017/tcp
firewall-cmd --permanent --add-service=mongodb
firewall-cmd --reload
firewall-cmd --list-all

Enable remote connection:

In /etc/mongod.conf file, update to below shown entries:

vim /etc/mongod.conf
---------------------------------------------------
# network interfaces
net:
  port: 27017
  bindIp: 0.0.0.0 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.


security:
  authorization: enabled
---------------------------------------------------
Next restart mongodb service
systemctl restart mongod

=================================================================================================================================================

Part2 - Configuration

[root@master-node ~]# mongo
MongoDB shell version v4.4.6
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("a1023c52-73d7-4864-9665-8cd16215ad9f") }
MongoDB server version: 4.4.6
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
        https://docs.mongodb.com/
Questions? Try the MongoDB Developer Community Forums
        https://community.mongodb.com
---
The server generated these startup warnings when booting:
        2024-07-01T09:13:48.093+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
        2024-07-01T09:13:48.095+05:30: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'
---
---
        Enable MongoDB's free cloud-based monitoring service, which will then receive and display
        metrics about your deployment (disk utilization, CPU, operation statistics, etc).

        The monitoring data will be available on a MongoDB website with a unique URL accessible to you
        and anyone you share the URL with. MongoDB may use this information to make product
        improvements and to suggest MongoDB products and deployment options to you.

        To enable free monitoring, run the following command: db.enableFreeMonitoring()
        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---
> use mydatabase
switched to db mydatabase
> db.createCollection("mycollection")
{ "ok" : 1 }
> db.mycollection.insertOne({"name": "John", "age": 30})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6682262591f0aa6b979c0010")
}
> db.mycollection.find()
{ "_id" : ObjectId("6682262591f0aa6b979c0010"), "name" : "John", "age" : 30 }
> db.mycollection.insertOne({"name": "Ram", "age": 38})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6682264791f0aa6b979c0011")
}
> db.mycollection.find()
{ "_id" : ObjectId("6682262591f0aa6b979c0010"), "name" : "John", "age" : 30 }
{ "_id" : ObjectId("6682264791f0aa6b979c0011"), "name" : "Ram", "age" : 38 }
> db.mycollection.insertOne({"name": "Patrik", "age": 22})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6682265d91f0aa6b979c0012")
}
> db.mycollection.find()
{ "_id" : ObjectId("6682262591f0aa6b979c0010"), "name" : "John", "age" : 30 }
{ "_id" : ObjectId("6682264791f0aa6b979c0011"), "name" : "Ram", "age" : 38 }
{ "_id" : ObjectId("6682265d91f0aa6b979c0012"), "name" : "Patrik", "age" : 22 }
> db.createUser(
...   {
...     user: "myTester",
...     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "mydatabase" },
...              { role: "read", db: "reporting" } ]
...   }
... )
Enter password:
Successfully added user: {
        "user" : "myTester",
        "roles" : [
                {
                        "role" : "readWrite",
                        "db" : "mydatabase"
                },
                {
                        "role" : "read",
                        "db" : "reporting"
                }
        ]
}
>

=================================================================================================================================================

Part3 - Connect from client machine using mongosh

# Install Mongo Shell Client in different server (that will act as client for MongoDB)

cat << EOF | tee /etc/yum.repos.d/mongodb-org-7.0.repo
[mongodb-org-7.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/7Server/mongodb-org/7.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://pgp.mongodb.com/server-7.0.asc
EOF

yum install -y mongodb-mongosh.x86_64

which mongosh


mongosh -u myTester 'mongodb://192.168.1.15:27017/mydatabase'
Enter password: ******

Current Mongosh Log ID: 66823bfbcc2ec38b08149f47
Connecting to:          mongodb://<credentials>@192.168.1.15:27017/mydatabase?directConnection=true&appName=mongosh+2.2.10
Using MongoDB:          4.4.6
Using Mongosh:          2.2.10

For mongosh info see: https://docs.mongodb.com/mongodb-shell/


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the disableTelemetry() command.

mydatabase> db.mycollection.find()
[
  { _id: ObjectId('6682262591f0aa6b979c0010'), name: 'John', age: 30 },
  { _id: ObjectId('6682264791f0aa6b979c0011'), name: 'Ram', age: 38 },
  {
    _id: ObjectId('6682265d91f0aa6b979c0012'),
    name: 'Patrik',
    age: 22
  }
]
mydatabase> exit

=================================================================================================================================================

Part4 - Setup Monitoring using Prometheus

# 1. Create a user that has monitoring privileges. Login to mongo locally.
mongo "127.0.0.1:27017" -u admin
MongoDB shell version v4.4.6
Enter password:
connecting to: mongodb://127.0.0.1:27017/test?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("1860ac25-0098-4202-85d5-01fa70e4215c") }
MongoDB server version: 4.4.6
> use admin
switched to db admin
> db.createUser({"user":"promongo",pwd:"promongo",roles:[{role:"clusterMonitor",db:"admin"},{role:"read",db:"mydatabase"}]})
Successfully added user: {
        "user" : "promongo",
        "roles" : [
                {
                        "role" : "clusterMonitor",
                        "db" : "admin"
                },
                {
                        "role" : "read",
                        "db" : "mydatabase"
                }
        ]
}

firewall-cmd --permanent --add-port=9001/tcp
firewall-cmd --reload

# 2. Now setup mongodb exporter for Prometheus
wget https://github.com/percona/mongodb_exporter/releases/download/v0.7.1/mongodb_exporter-0.7.1.linux-amd64.tar.gz
Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.110.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 6670517 (6.4M) [application/octet-stream]
Saving to: ‘mongodb_exporter-0.7.1.linux-amd64.tar.gz’

mongodb_exporter-0.7.1.linux-amd64.tar.gz       100%[====================================================================================================>]   6.36M  2.76MB/s    in 2.3s

2024-07-03 10:31:34 (2.76 MB/s) - ‘mongodb_exporter-0.7.1.linux-amd64.tar.gz’ saved [6670517/6670517]


tar -xvzf mongodb_exporter-0.7.1.linux-amd64.tar.gz
mv mongodb_exporter /usr/local/bin

# 3. Now start the exporter on 9001 port
./mongodb_exporter --mongodb.uri="mongodb://promongo:promongo@127.0.0.1:27017/admin?authSource=admin"  --web.listen-address=:9001
INFO[0000] Starting mongodb_exporter (version=0.7.1, branch=v0.7.1, revision=3002738d50f689c8204f70f6cceb8150b98fa869)  source="mongodb_exporter.go:106"
INFO[0000] Build context (go=go1.11.10, user=travis@build.travis-ci.org, date=20190611-18:50:27)  source="mongodb_exporter.go:107"
INFO[0000] Starting HTTP server for http://:9001/metrics ...  source="server.go:121"

# Do not use control+C, it will end exporter. So, open another terminal for the below. Once it works, you can setup systemctl service for this.

# Now open Prometheus config to add this mongo exporter. Now I am switching to Prometheus server.

[root@master-node bin]# ssh worker-node1
root@worker-node1's password:
Permission denied, please try again.
root@worker-node1's password:
Activate the web console with: systemctl enable --now cockpit.socket

Register this system with Red Hat Insights: insights-client --register
Create an account or view all your systems at https://red.ht/insights-dashboard
Last failed login: Tue Jul  2 22:05:03 PDT 2024 from 192.168.1.15 on ssh:notty
There was 1 failed login attempt since the last successful login.
Last login: Sun Jun 30 20:38:45 2024
[root@worker-node1 ~]# cd /usr/local/bin/prometheus/
[root@worker-node1 prometheus]# ls -lrt
total 347436
-rwxr-xr-x. 1 root root  37345962 Feb 28 03:52 alertmanager
-rwxr-xr-x. 1 root root  30130103 Feb 28 03:52 amtool
-rwxr-xr-x. 1 1001 1002  20494344 May 21 11:36 node_exporter
-rwxr-xr-x. 1 1001  127 137821861 Jun 19 00:40 prometheus
-rwxr-xr-x. 1 1001  127 129737825 Jun 19 00:40 promtool
-rw-r--r--. 1 1001  127      3773 Jun 19 00:52 NOTICE
-rw-r--r--. 1 1001  127     11357 Jun 19 00:52 LICENSE
drwxr-xr-x. 2 1001  127       173 Jun 19 00:52 consoles
drwxr-xr-x. 2 1001  127        38 Jun 19 00:52 console_libraries
-rw-r--r--. 1 root root     92260 Jun 22 04:50 f1
drwxr-xr-x. 5 root root       133 Jun 25 05:57 data
-rw-r--r--. 1 1001  127      1308 Jun 25 05:58 prometheus.yml
-rw-r--r--. 1 root root       886 Jun 25 22:04 prometheus_rules.yml
-rw-r--r--. 1 root root     50669 Jun 25 22:17 log1
-rw-r--r--. 1 root root       561 Jun 25 22:19 alertmanager.yml
-rw-r--r--. 1 root root     61355 Jun 25 22:24 log2
[root@worker-node1 prometheus]# vim prometheus.yml
Add the below entry and save the file:
  - job_name: "mongodb-exporter_master-node"
    static_configs:
      - targets: ["master-node:9001"]


systemctl restart prometheus.service


# Now open your Prometheus console and you should see mongodb exporter listed under Targets

Targets
Filter by endpoint or labels
mongodb-exporter_master-node (1/1 up)
mysqld-exporter_worker-node2 (1/1 up)
node-exporter_master-node (1/1 up)
node-exporter_worker-node1 (1/1 up)
node-exporter_worker-node2 (1/1 up)
prometheus (1/1 up)

# Now click on icon to go to home page and query for the following: mongodb_connections
# It should return the following type of output (values may vary). These are metrics coming from MongoDB exporter.

mongodb_connections{instance="master-node:9001", job="mongodb-exporter_master-node", state="available"}
51198
mongodb_connections{instance="master-node:9001", job="mongodb-exporter_master-node", state="current"}
2

=================================================================================================================================================


# Full metric list for your reference
# HELP go_gc_duration_seconds A summary of the GC invocation durations.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 0.000174236
go_gc_duration_seconds{quantile="0.25"} 0.000200427
go_gc_duration_seconds{quantile="0.5"} 0.000595515
go_gc_duration_seconds{quantile="0.75"} 0.000872061
go_gc_duration_seconds{quantile="1"} 0.000907999
go_gc_duration_seconds_sum 0.003637147
go_gc_duration_seconds_count 7
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 13
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 1.607776e+06
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 1.8930512e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.446382e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 128944
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 2.371584e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 1.607776e+06
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 6.3741952e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 2.842624e+06
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 6959
# HELP go_memstats_heap_released_bytes_total Total number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes_total counter
go_memstats_heap_released_bytes_total 0
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.6584576e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.719983702025573e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 135903
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 5184
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 36176
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 49152
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 4.194304e+06
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 1.029898e+06
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 524288
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 524288
# HELP go_memstats_sys_bytes Number of bytes obtained by system. Sum of all system allocations.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.2022264e+07
# HELP mongodb_asserts_total The asserts document reports the number of asserts on the database. While assert errors are typically uncommon, if there are non-zero values for the asserts, you should check the log file for the mongod process for more information. In many cases these errors are trivial, but are worth investigating.
# TYPE mongodb_asserts_total counter
mongodb_asserts_total{type="msg"} 0
mongodb_asserts_total{type="regular"} 0
mongodb_asserts_total{type="rollovers"} 0
mongodb_asserts_total{type="user"} 130
mongodb_asserts_total{type="warning"} 0
# HELP mongodb_connections The connections sub document data regarding the current status of incoming connections and availability of the database server. Use these values to assess the current load and capacity requirements of the server
# TYPE mongodb_connections gauge
mongodb_connections{state="available"} 51198
mongodb_connections{state="current"} 2
# HELP mongodb_connections_metrics_created_total totalCreated provides a count of all incoming connections created to the server. This number includes connections that have since closed
# TYPE mongodb_connections_metrics_created_total counter
mongodb_connections_metrics_created_total 28
# HELP mongodb_exporter_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which mongodb_exporter was built.
# TYPE mongodb_exporter_build_info gauge
mongodb_exporter_build_info{branch="v0.7.1",goversion="go1.11.10",revision="3002738d50f689c8204f70f6cceb8150b98fa869",version="0.7.1"} 1
# HELP mongodb_exporter_last_scrape_duration_seconds Duration of the last scrape of metrics from MongoDB.
# TYPE mongodb_exporter_last_scrape_duration_seconds gauge
mongodb_exporter_last_scrape_duration_seconds 0.06717537
# HELP mongodb_exporter_last_scrape_error Whether the last scrape of metrics from MongoDB resulted in an error (1 for error, 0 for success).
# TYPE mongodb_exporter_last_scrape_error gauge
mongodb_exporter_last_scrape_error 0
# HELP mongodb_exporter_scrape_errors_total Total number of times an error occurred scraping a MongoDB.
# TYPE mongodb_exporter_scrape_errors_total counter
mongodb_exporter_scrape_errors_total 0
# HELP mongodb_exporter_scrapes_total Total number of times MongoDB was scraped for metrics.
# TYPE mongodb_exporter_scrapes_total counter
mongodb_exporter_scrapes_total 17
# HELP mongodb_extra_info_heap_usage_bytes The heap_usage_bytes field is only available on Unix/Linux systems, and reports the total size in bytes of heap space used by the database process
# TYPE mongodb_extra_info_heap_usage_bytes gauge
mongodb_extra_info_heap_usage_bytes 0
# HELP mongodb_extra_info_page_faults_total The page_faults Reports the total number of page faults that require disk operations. Page faults refer to operations that require the database server to access data which isn’t available in active memory. The page_faults counter may increase dramatically during moments of poor performance and may correlate with limited memory environments and larger data sets. Limited and sporadic page faults do not necessarily indicate an issue
# TYPE mongodb_extra_info_page_faults_total gauge
mongodb_extra_info_page_faults_total 11989
# HELP mongodb_instance_local_time The localTime value is the current time, according to the server, in UTC specified in an ISODate format.
# TYPE mongodb_instance_local_time counter
mongodb_instance_local_time 1.719983716e+09
# HELP mongodb_instance_uptime_estimate_seconds uptimeEstimate provides the uptime as calculated from MongoDB's internal course-grained time keeping system.
# TYPE mongodb_instance_uptime_estimate_seconds counter
mongodb_instance_uptime_estimate_seconds 5988
# HELP mongodb_instance_uptime_seconds The value of the uptime field corresponds to the number of seconds that the mongos or mongod process has been active.
# TYPE mongodb_instance_uptime_seconds counter
mongodb_instance_uptime_seconds 5988
# HELP mongodb_memory The mem data structure holds information regarding the target system architecture of mongod and current memory use
# TYPE mongodb_memory gauge
mongodb_memory{type="mapped"} 0
mongodb_memory{type="mapped_with_journal"} 0
mongodb_memory{type="resident"} 86
mongodb_memory{type="virtual"} 1473
# HELP mongodb_mongod_global_lock_client The activeClients data structure provides more granular information about the number of connected clients and the operation types (e.g. read or write) performed by these clients
# TYPE mongodb_mongod_global_lock_client gauge
mongodb_mongod_global_lock_client{type="reader"} 0
mongodb_mongod_global_lock_client{type="writer"} 0
# HELP mongodb_mongod_global_lock_current_queue The currentQueue data structure value provides more granular information concerning the number of operations queued because of a lock
# TYPE mongodb_mongod_global_lock_current_queue gauge
mongodb_mongod_global_lock_current_queue{type="reader"} 0
mongodb_mongod_global_lock_current_queue{type="writer"} 0
# HELP mongodb_mongod_global_lock_ratio The value of ratio displays the relationship between lockTime and totalTime. Low values indicate that operations have held the globalLock frequently for shorter periods of time. High values indicate that operations have held globalLock infrequently for longer periods of time
# TYPE mongodb_mongod_global_lock_ratio gauge
mongodb_mongod_global_lock_ratio 0
# HELP mongodb_mongod_global_lock_total The value of totalTime represents the time, in microseconds, since the database last started and creation of the globalLock. This is roughly equivalent to total server uptime
# TYPE mongodb_mongod_global_lock_total counter
mongodb_mongod_global_lock_total 0
# HELP mongodb_mongod_locks_time_acquiring_global_microseconds_total amount of time in microseconds that any database has spent waiting for the global lock
# TYPE mongodb_mongod_locks_time_acquiring_global_microseconds_total counter
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Collection",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Collection",type="write"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Database",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Database",type="write"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Global",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Global",type="write"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Mutex",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="Mutex",type="write"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="ParallelBatchWriterMode",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="ParallelBatchWriterMode",type="write"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="ReplicationStateTransition",type="read"} 0
mongodb_mongod_locks_time_acquiring_global_microseconds_total{database="ReplicationStateTransition",type="write"} 0
# HELP mongodb_mongod_locks_time_locked_global_microseconds_total amount of time in microseconds that any database has held the global lock
# TYPE mongodb_mongod_locks_time_locked_global_microseconds_total counter
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Collection",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Collection",type="write"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Database",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Database",type="write"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Global",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Global",type="write"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Mutex",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="Mutex",type="write"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="ParallelBatchWriterMode",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="ParallelBatchWriterMode",type="write"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="ReplicationStateTransition",type="read"} 0
mongodb_mongod_locks_time_locked_global_microseconds_total{database="ReplicationStateTransition",type="write"} 0
# HELP mongodb_mongod_locks_time_locked_local_microseconds_total amount of time in microseconds that any database has held the local lock
# TYPE mongodb_mongod_locks_time_locked_local_microseconds_total counter
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Collection",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Collection",type="write"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Database",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Database",type="write"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Global",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Global",type="write"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Mutex",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="Mutex",type="write"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="ParallelBatchWriterMode",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="ParallelBatchWriterMode",type="write"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="ReplicationStateTransition",type="read"} 0
mongodb_mongod_locks_time_locked_local_microseconds_total{database="ReplicationStateTransition",type="write"} 0
# HELP mongodb_mongod_metrics_cursor_open The open is an embedded document that contains data regarding open cursors
# TYPE mongodb_mongod_metrics_cursor_open gauge
mongodb_mongod_metrics_cursor_open{state="noTimeout"} 0
mongodb_mongod_metrics_cursor_open{state="pinned"} 0
mongodb_mongod_metrics_cursor_open{state="total"} 0
# HELP mongodb_mongod_metrics_cursor_timed_out_total timedOut provides the total number of cursors that have timed out since the server process started. If this number is large or growing at a regular rate, this may indicate an application error
# TYPE mongodb_mongod_metrics_cursor_timed_out_total counter
mongodb_mongod_metrics_cursor_timed_out_total 0
# HELP mongodb_mongod_metrics_document_total The document holds a document of that reflect document access and modification patterns and data use. Compare these values to the data in the opcounters document, which track total number of operations
# TYPE mongodb_mongod_metrics_document_total counter
mongodb_mongod_metrics_document_total{state="deleted"} 2
mongodb_mongod_metrics_document_total{state="inserted"} 2
mongodb_mongod_metrics_document_total{state="returned"} 4
mongodb_mongod_metrics_document_total{state="updated"} 2
# HELP mongodb_mongod_metrics_get_last_error_wtime_num_total num reports the total number of getLastError operations with a specified write concern (i.e. w) that wait for one or more members of a replica set to acknowledge the write operation (i.e. a w value greater than 1.)
# TYPE mongodb_mongod_metrics_get_last_error_wtime_num_total gauge
mongodb_mongod_metrics_get_last_error_wtime_num_total 0
# HELP mongodb_mongod_metrics_get_last_error_wtime_total_milliseconds total_millis reports the total amount of time in milliseconds that the mongod has spent performing getLastError operations with write concern (i.e. w) that wait for one or more members of a replica set to acknowledge the write operation (i.e. a w value greater than 1.)
# TYPE mongodb_mongod_metrics_get_last_error_wtime_total_milliseconds counter
mongodb_mongod_metrics_get_last_error_wtime_total_milliseconds 0
# HELP mongodb_mongod_metrics_get_last_error_wtimeouts_total wtimeouts reports the number of times that write concern operations have timed out as a result of the wtimeout threshold to getLastError.
# TYPE mongodb_mongod_metrics_get_last_error_wtimeouts_total counter
mongodb_mongod_metrics_get_last_error_wtimeouts_total 0
# HELP mongodb_mongod_metrics_operation_total operation is a sub-document that holds counters for several types of update and query operations that MongoDB handles using special operation types
# TYPE mongodb_mongod_metrics_operation_total counter
mongodb_mongod_metrics_operation_total{type="fastmod"} 0
mongodb_mongod_metrics_operation_total{type="idhack"} 0
mongodb_mongod_metrics_operation_total{type="scan_and_order"} 0
# HELP mongodb_mongod_metrics_query_executor_total queryExecutor is a document that reports data from the query execution system
# TYPE mongodb_mongod_metrics_query_executor_total counter
mongodb_mongod_metrics_query_executor_total{state="scanned"} 12
mongodb_mongod_metrics_query_executor_total{state="scanned_objects"} 12
# HELP mongodb_mongod_metrics_record_moves_total moves reports the total number of times documents move within the on-disk representation of the MongoDB data set. Documents move as a result of operations that increase the size of the document beyond their allocated record size
# TYPE mongodb_mongod_metrics_record_moves_total counter
mongodb_mongod_metrics_record_moves_total 0
# HELP mongodb_mongod_metrics_repl_apply_batches_num_total num reports the total number of batches applied across all databases
# TYPE mongodb_mongod_metrics_repl_apply_batches_num_total counter
mongodb_mongod_metrics_repl_apply_batches_num_total 0
# HELP mongodb_mongod_metrics_repl_apply_batches_total_milliseconds total_millis reports the total amount of time the mongod has spent applying operations from the oplog
# TYPE mongodb_mongod_metrics_repl_apply_batches_total_milliseconds counter
mongodb_mongod_metrics_repl_apply_batches_total_milliseconds 0
# HELP mongodb_mongod_metrics_repl_apply_ops_total ops reports the total number of oplog operations applied
# TYPE mongodb_mongod_metrics_repl_apply_ops_total counter
mongodb_mongod_metrics_repl_apply_ops_total 0
# HELP mongodb_mongod_metrics_repl_buffer_count count reports the current number of operations in the oplog buffer
# TYPE mongodb_mongod_metrics_repl_buffer_count gauge
mongodb_mongod_metrics_repl_buffer_count 0
# HELP mongodb_mongod_metrics_repl_buffer_max_size_bytes maxSizeBytes reports the maximum size of the buffer. This value is a constant setting in the mongod, and is not configurable
# TYPE mongodb_mongod_metrics_repl_buffer_max_size_bytes counter
mongodb_mongod_metrics_repl_buffer_max_size_bytes 0
# HELP mongodb_mongod_metrics_repl_buffer_size_bytes sizeBytes reports the current size of the contents of the oplog buffer
# TYPE mongodb_mongod_metrics_repl_buffer_size_bytes gauge
mongodb_mongod_metrics_repl_buffer_size_bytes 0
# HELP mongodb_mongod_metrics_repl_executor_event_waiters number of event waiters in the replication executor
# TYPE mongodb_mongod_metrics_repl_executor_event_waiters gauge
mongodb_mongod_metrics_repl_executor_event_waiters 0
# HELP mongodb_mongod_metrics_repl_executor_queue number of queued operations in the replication executor
# TYPE mongodb_mongod_metrics_repl_executor_queue gauge
mongodb_mongod_metrics_repl_executor_queue{type="networkInProgress"} 0
mongodb_mongod_metrics_repl_executor_queue{type="sleepers"} 0
# HELP mongodb_mongod_metrics_repl_executor_unsignaled_events number of unsignaled events in the replication executor
# TYPE mongodb_mongod_metrics_repl_executor_unsignaled_events gauge
mongodb_mongod_metrics_repl_executor_unsignaled_events 0
# HELP mongodb_mongod_metrics_repl_network_bytes_total bytes reports the total amount of data read from the replication sync source
# TYPE mongodb_mongod_metrics_repl_network_bytes_total counter
mongodb_mongod_metrics_repl_network_bytes_total 0
# HELP mongodb_mongod_metrics_repl_network_getmores_num_total num reports the total number of getmore operations, which are operations that request an additional set of operations from the replication sync source.
# TYPE mongodb_mongod_metrics_repl_network_getmores_num_total counter
mongodb_mongod_metrics_repl_network_getmores_num_total 0
# HELP mongodb_mongod_metrics_repl_network_getmores_total_milliseconds total_millis reports the total amount of time required to collect data from getmore operations
# TYPE mongodb_mongod_metrics_repl_network_getmores_total_milliseconds counter
mongodb_mongod_metrics_repl_network_getmores_total_milliseconds 0
# HELP mongodb_mongod_metrics_repl_network_ops_total ops reports the total number of operations read from the replication source.
# TYPE mongodb_mongod_metrics_repl_network_ops_total counter
mongodb_mongod_metrics_repl_network_ops_total 0
# HELP mongodb_mongod_metrics_repl_network_readers_created_total readersCreated reports the total number of oplog query processes created. MongoDB will create a new oplog query any time an error occurs in the connection, including a timeout, or a network operation. Furthermore, readersCreated will increment every time MongoDB selects a new source fore replication.
# TYPE mongodb_mongod_metrics_repl_network_readers_created_total counter
mongodb_mongod_metrics_repl_network_readers_created_total 0
# HELP mongodb_mongod_metrics_repl_oplog_insert_bytes_total insertBytes the total size of documents inserted into the oplog.
# TYPE mongodb_mongod_metrics_repl_oplog_insert_bytes_total counter
mongodb_mongod_metrics_repl_oplog_insert_bytes_total 0
# HELP mongodb_mongod_metrics_repl_oplog_insert_num_total num reports the total number of items inserted into the oplog.
# TYPE mongodb_mongod_metrics_repl_oplog_insert_num_total counter
mongodb_mongod_metrics_repl_oplog_insert_num_total 0
# HELP mongodb_mongod_metrics_repl_oplog_insert_total_milliseconds total_millis reports the total amount of time spent for the mongod to insert data into the oplog.
# TYPE mongodb_mongod_metrics_repl_oplog_insert_total_milliseconds counter
mongodb_mongod_metrics_repl_oplog_insert_total_milliseconds 0
# HELP mongodb_mongod_metrics_repl_preload_docs_num_total num reports the total number of documents loaded during the pre-fetch stage of replication
# TYPE mongodb_mongod_metrics_repl_preload_docs_num_total counter
mongodb_mongod_metrics_repl_preload_docs_num_total 0
# HELP mongodb_mongod_metrics_repl_preload_docs_total_milliseconds total_millis reports the total amount of time spent loading documents as part of the pre-fetch stage of replication
# TYPE mongodb_mongod_metrics_repl_preload_docs_total_milliseconds counter
mongodb_mongod_metrics_repl_preload_docs_total_milliseconds 0
# HELP mongodb_mongod_metrics_repl_preload_indexes_num_total num reports the total number of index entries loaded by members before updating documents as part of the pre-fetch stage of replication
# TYPE mongodb_mongod_metrics_repl_preload_indexes_num_total counter
mongodb_mongod_metrics_repl_preload_indexes_num_total 0
# HELP mongodb_mongod_metrics_repl_preload_indexes_total_milliseconds total_millis reports the total amount of time spent loading index entries as part of the pre-fetch stage of replication
# TYPE mongodb_mongod_metrics_repl_preload_indexes_total_milliseconds counter
mongodb_mongod_metrics_repl_preload_indexes_total_milliseconds 0
# HELP mongodb_mongod_metrics_ttl_deleted_documents_total deletedDocuments reports the total number of documents deleted from collections with a ttl index.
# TYPE mongodb_mongod_metrics_ttl_deleted_documents_total counter
mongodb_mongod_metrics_ttl_deleted_documents_total 0
# HELP mongodb_mongod_metrics_ttl_passes_total passes reports the number of times the background process removes documents from collections with a ttl index
# TYPE mongodb_mongod_metrics_ttl_passes_total counter
mongodb_mongod_metrics_ttl_passes_total 99
# HELP mongodb_mongod_op_counters_repl_total The opcountersRepl data structure, similar to the opcounters data structure, provides an overview of database replication operations by type and makes it possible to analyze the load on the replica in more granular manner. These values only appear when the current host has replication enabled
# TYPE mongodb_mongod_op_counters_repl_total counter
mongodb_mongod_op_counters_repl_total{type="command"} 0
mongodb_mongod_op_counters_repl_total{type="delete"} 0
mongodb_mongod_op_counters_repl_total{type="getmore"} 0
mongodb_mongod_op_counters_repl_total{type="insert"} 0
mongodb_mongod_op_counters_repl_total{type="query"} 0
mongodb_mongod_op_counters_repl_total{type="update"} 0
# HELP mongodb_mongod_op_counters_total The opcounters data structure provides an overview of database operations by type and makes it possible to analyze the load on the database in more granular manner. These numbers will grow over time and in response to database use. Analyze these values over time to track database utilization
# TYPE mongodb_mongod_op_counters_total counter
mongodb_mongod_op_counters_total{type="command"} 520
mongodb_mongod_op_counters_total{type="delete"} 4
mongodb_mongod_op_counters_total{type="getmore"} 0
mongodb_mongod_op_counters_total{type="insert"} 2
mongodb_mongod_op_counters_total{type="query"} 21
mongodb_mongod_op_counters_total{type="update"} 4
# HELP mongodb_mongod_op_latencies_histogram op latencies histogram statistics of mongod
# TYPE mongodb_mongod_op_latencies_histogram gauge
mongodb_mongod_op_latencies_histogram{micros="0",type="command"} 2
mongodb_mongod_op_latencies_histogram{micros="1024",type="command"} 58
mongodb_mongod_op_latencies_histogram{micros="12288",type="command"} 13
mongodb_mongod_op_latencies_histogram{micros="128",type="command"} 31
mongodb_mongod_op_latencies_histogram{micros="16",type="command"} 138
mongodb_mongod_op_latencies_histogram{micros="16384",type="command"} 3
mongodb_mongod_op_latencies_histogram{micros="2048",type="command"} 31
mongodb_mongod_op_latencies_histogram{micros="24576",type="command"} 3
mongodb_mongod_op_latencies_histogram{micros="256",type="command"} 5
mongodb_mongod_op_latencies_histogram{micros="3072",type="command"} 19
mongodb_mongod_op_latencies_histogram{micros="32",type="command"} 54
mongodb_mongod_op_latencies_histogram{micros="32768",type="command"} 2
mongodb_mongod_op_latencies_histogram{micros="4096",type="command"} 11
mongodb_mongod_op_latencies_histogram{micros="49152",type="command"} 5
mongodb_mongod_op_latencies_histogram{micros="512",type="command"} 30
mongodb_mongod_op_latencies_histogram{micros="6144",type="command"} 13
mongodb_mongod_op_latencies_histogram{micros="64",type="command"} 43
mongodb_mongod_op_latencies_histogram{micros="8",type="command"} 6
mongodb_mongod_op_latencies_histogram{micros="8192",type="command"} 12
mongodb_mongod_op_latencies_histogram{micros="98304",type="command"} 2
# HELP mongodb_mongod_op_latencies_latency_total op latencies statistics in microseconds of mongod
# TYPE mongodb_mongod_op_latencies_latency_total gauge
mongodb_mongod_op_latencies_latency_total{type="command"} 1.455717e+06
mongodb_mongod_op_latencies_latency_total{type="read"} 0
mongodb_mongod_op_latencies_latency_total{type="write"} 0
# HELP mongodb_mongod_op_latencies_ops_total op latencies ops total statistics of mongod
# TYPE mongodb_mongod_op_latencies_ops_total gauge
mongodb_mongod_op_latencies_ops_total{type="command"} 481
mongodb_mongod_op_latencies_ops_total{type="read"} 0
mongodb_mongod_op_latencies_ops_total{type="write"} 0
# HELP mongodb_mongod_storage_engine The storage engine used by the MongoDB instance
# TYPE mongodb_mongod_storage_engine counter
mongodb_mongod_storage_engine{engine="wiredTiger"} 1
# HELP mongodb_mongod_wiredtiger_blockmanager_blocks_total The total number of blocks read by the WiredTiger BlockManager
# TYPE mongodb_mongod_wiredtiger_blockmanager_blocks_total counter
mongodb_mongod_wiredtiger_blockmanager_blocks_total{type="pre_loaded"} 10
mongodb_mongod_wiredtiger_blockmanager_blocks_total{type="read"} 150
mongodb_mongod_wiredtiger_blockmanager_blocks_total{type="read_mapped"} 0
mongodb_mongod_wiredtiger_blockmanager_blocks_total{type="written"} 565
# HELP mongodb_mongod_wiredtiger_blockmanager_bytes_total The total number of bytes read by the WiredTiger BlockManager
# TYPE mongodb_mongod_wiredtiger_blockmanager_bytes_total counter
mongodb_mongod_wiredtiger_blockmanager_bytes_total{type="read"} 638976
mongodb_mongod_wiredtiger_blockmanager_bytes_total{type="read_mapped"} 0
mongodb_mongod_wiredtiger_blockmanager_bytes_total{type="written"} 4.77184e+06
# HELP mongodb_mongod_wiredtiger_cache_bytes The current size of data in the WiredTiger Cache in bytes
# TYPE mongodb_mongod_wiredtiger_cache_bytes gauge
mongodb_mongod_wiredtiger_cache_bytes{type="dirty"} 847
mongodb_mongod_wiredtiger_cache_bytes{type="internal_pages"} 5837
mongodb_mongod_wiredtiger_cache_bytes{type="leaf_pages"} 83873
mongodb_mongod_wiredtiger_cache_bytes{type="total"} 89710
# HELP mongodb_mongod_wiredtiger_cache_bytes_total The total number of bytes read into/from the WiredTiger Cache
# TYPE mongodb_mongod_wiredtiger_cache_bytes_total counter
mongodb_mongod_wiredtiger_cache_bytes_total{type="read"} 47489
mongodb_mongod_wiredtiger_cache_bytes_total{type="written"} 2.796521e+06
# HELP mongodb_mongod_wiredtiger_cache_evicted_total The total number of pages evicted from the WiredTiger Cache
# TYPE mongodb_mongod_wiredtiger_cache_evicted_total counter
mongodb_mongod_wiredtiger_cache_evicted_total{type="modified"} 91
mongodb_mongod_wiredtiger_cache_evicted_total{type="unmodified"} 0
# HELP mongodb_mongod_wiredtiger_cache_max_bytes The maximum size of data in the WiredTiger Cache in bytes
# TYPE mongodb_mongod_wiredtiger_cache_max_bytes gauge
mongodb_mongod_wiredtiger_cache_max_bytes 9.02823936e+08
# HELP mongodb_mongod_wiredtiger_cache_overhead_percent The percentage overhead of the WiredTiger Cache
# TYPE mongodb_mongod_wiredtiger_cache_overhead_percent gauge
mongodb_mongod_wiredtiger_cache_overhead_percent 8
# HELP mongodb_mongod_wiredtiger_cache_pages The current number of pages in the WiredTiger Cache
# TYPE mongodb_mongod_wiredtiger_cache_pages gauge
mongodb_mongod_wiredtiger_cache_pages{type="dirty"} 2
mongodb_mongod_wiredtiger_cache_pages{type="total"} 25
# HELP mongodb_mongod_wiredtiger_cache_pages_total The total number of pages read into/from the WiredTiger Cache
# TYPE mongodb_mongod_wiredtiger_cache_pages_total counter
mongodb_mongod_wiredtiger_cache_pages_total{type="read"} 20
mongodb_mongod_wiredtiger_cache_pages_total{type="written"} 234
# HELP mongodb_mongod_wiredtiger_concurrent_transactions_available_tickets The number of tickets that are available in WiredTiger
# TYPE mongodb_mongod_wiredtiger_concurrent_transactions_available_tickets gauge
mongodb_mongod_wiredtiger_concurrent_transactions_available_tickets{type="read"} 127
mongodb_mongod_wiredtiger_concurrent_transactions_available_tickets{type="write"} 128
# HELP mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets The number of tickets that are currently in use (out) in WiredTiger
# TYPE mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets gauge
mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets{type="read"} 1
mongodb_mongod_wiredtiger_concurrent_transactions_out_tickets{type="write"} 0
# HELP mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets The total number of tickets that are available in WiredTiger
# TYPE mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets gauge
mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets{type="read"} 128
mongodb_mongod_wiredtiger_concurrent_transactions_total_tickets{type="write"} 128
# HELP mongodb_mongod_wiredtiger_log_bytes_total The total number of bytes written to the WiredTiger log
# TYPE mongodb_mongod_wiredtiger_log_bytes_total counter
mongodb_mongod_wiredtiger_log_bytes_total{type="payload"} 149024
mongodb_mongod_wiredtiger_log_bytes_total{type="written"} 184704
# HELP mongodb_mongod_wiredtiger_log_operations_total The total number of WiredTiger log operations
# TYPE mongodb_mongod_wiredtiger_log_operations_total counter
mongodb_mongod_wiredtiger_log_operations_total{type="flush"} 59392
mongodb_mongod_wiredtiger_log_operations_total{type="read"} 0
mongodb_mongod_wiredtiger_log_operations_total{type="scan"} 6
mongodb_mongod_wiredtiger_log_operations_total{type="scan_double"} 0
mongodb_mongod_wiredtiger_log_operations_total{type="sync"} 150
mongodb_mongod_wiredtiger_log_operations_total{type="sync_dir"} 1
mongodb_mongod_wiredtiger_log_operations_total{type="write"} 513
# HELP mongodb_mongod_wiredtiger_log_records_scanned_total The total number of records scanned by log scan in the WiredTiger log
# TYPE mongodb_mongod_wiredtiger_log_records_scanned_total counter
mongodb_mongod_wiredtiger_log_records_scanned_total 15
# HELP mongodb_mongod_wiredtiger_log_records_total The total number of compressed/uncompressed records written to the WiredTiger log
# TYPE mongodb_mongod_wiredtiger_log_records_total counter
mongodb_mongod_wiredtiger_log_records_total{type="compressed"} 101
mongodb_mongod_wiredtiger_log_records_total{type="uncompressed"} 3
# HELP mongodb_mongod_wiredtiger_session_open_cursors_total The total number of cursors opened in WiredTiger
# TYPE mongodb_mongod_wiredtiger_session_open_cursors_total gauge
mongodb_mongod_wiredtiger_session_open_cursors_total 0
# HELP mongodb_mongod_wiredtiger_session_open_sessions_total The total number of sessions opened in WiredTiger
# TYPE mongodb_mongod_wiredtiger_session_open_sessions_total gauge
mongodb_mongod_wiredtiger_session_open_sessions_total 14
# HELP mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds The time in milliseconds transactions have checkpointed in WiredTiger
# TYPE mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds gauge
mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds{type="max"} 99
mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds{type="min"} 2
# HELP mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds_total The total time in milliseconds transactions have checkpointed in WiredTiger
# TYPE mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds_total counter
mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds_total 2314
# HELP mongodb_mongod_wiredtiger_transactions_running_checkpoints The number of currently running checkpoints in WiredTiger
# TYPE mongodb_mongod_wiredtiger_transactions_running_checkpoints gauge
mongodb_mongod_wiredtiger_transactions_running_checkpoints 0
# HELP mongodb_mongod_wiredtiger_transactions_total The total number of transactions WiredTiger has handled
# TYPE mongodb_mongod_wiredtiger_transactions_total counter
mongodb_mongod_wiredtiger_transactions_total{type="begins"} 306
mongodb_mongod_wiredtiger_transactions_total{type="checkpoints"} 100
mongodb_mongod_wiredtiger_transactions_total{type="committed"} 13
mongodb_mongod_wiredtiger_transactions_total{type="rolledback"} 293
# HELP mongodb_network_bytes_total The network data structure contains data regarding MongoDB’s network use
# TYPE mongodb_network_bytes_total counter
mongodb_network_bytes_total{state="in_bytes"} 40772
mongodb_network_bytes_total{state="out_bytes"} 906113
# HELP mongodb_network_metrics_num_requests_total The numRequests field is a counter of the total number of distinct requests that the server has received. Use this value to provide context for the bytesIn and bytesOut values to ensure that MongoDB’s network utilization is consistent with expectations and application use
# TYPE mongodb_network_metrics_num_requests_total counter
mongodb_network_metrics_num_requests_total 482
# HELP mongodb_up Whether MongoDB is up.
# TYPE mongodb_up gauge
mongodb_up 1
# HELP mongodb_version_info Software version information for mongodb process.
# TYPE mongodb_version_info gauge
mongodb_version_info{mongodb="4.4.6"} 1
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 0.64
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1024
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 10
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 1.0878976e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.71998347604e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 1.1636736e+08